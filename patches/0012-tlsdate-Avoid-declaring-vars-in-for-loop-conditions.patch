From e29f26e73dbdea06d16a134fa14761be675b4c12 Mon Sep 17 00:00:00 2001
From: Daniel Erat <derat@chromium.org>
Date: Mon, 26 Jun 2017 08:56:58 -0600
Subject: [PATCH 12/26] tlsdate: Avoid declaring vars in for-loop conditions.

Change some code in platform-cros-util-unittest.c to avoid
errors when using old compilers. Also delete an unused
variable in platform-cros.c.

BUG=chromium:736689
TEST=tests still pass in local build

Change-Id: Ib80b8162203f4041b4b5afa9c7508a2bbc73c93f
Reviewed-on: https://chromium-review.googlesource.com/548217
Commit-Queue: Dan Erat <derat@chromium.org>
Tested-by: Dan Erat <derat@chromium.org>
Trybot-Ready: Dan Erat <derat@chromium.org>
Reviewed-by: Luis Lozano <llozano@chromium.org>
Reviewed-by: Manoj Gupta <manojgupta@chromium.org>
---
 src/platform-cros-util-unittest.c | 6 ++++--
 src/platform-cros.c               | 3 ---
 2 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/src/platform-cros-util-unittest.c b/src/platform-cros-util-unittest.c
index 1d23ea6..14af82c 100644
--- a/src/platform-cros-util-unittest.c
+++ b/src/platform-cros-util-unittest.c
@@ -68,7 +68,8 @@ TEST(test_canonicalize_pac_parsing) {
   };
 
   char buf[256];
-  for (size_t i = 0; i < ARRAYSIZE(kCases); ++i) {
+  size_t i;
+  for (i = 0; i < ARRAYSIZE(kCases); ++i) {
     EXPECT_TRUE(check_case(&kCases[i], buf, ARRAYSIZE(buf))) {
       TH_LOG("PAC \"%s\": expected \"%s\", actual \"%s\"",
              kCases[i].input_pac, kCases[i].expected, buf);
@@ -92,7 +93,8 @@ TEST(test_canonicalize_pac_overflow) {
   };
 
   char buf[16];
-  for (size_t i = 0; i < ARRAYSIZE(kCases); ++i) {
+  size_t i;
+  for (i = 0; i < ARRAYSIZE(kCases); ++i) {
     EXPECT_TRUE(check_case(&kCases[i], buf, ARRAYSIZE(buf))) {
       TH_LOG("PAC \"%s\": expected \"%s\", actual \"%s\"",
              kCases[i].input_pac, kCases[i].expected, buf);
diff --git a/src/platform-cros.c b/src/platform-cros.c
index a49d261..cf67960 100644
--- a/src/platform-cros.c
+++ b/src/platform-cros.c
@@ -155,10 +155,7 @@ handle_proxy_change (DBusConnection *connection,
 {
   DBusMessageIter iter;
   const char *pval;
-  struct source *src = ctx->state->opts.sources;
   debug ("[event:cros:%s]: fired", __func__);
-  if (ctx->state->opts.cur_source && ctx->state->opts.cur_source->next)
-    src = ctx->state->opts.cur_source->next;
   if (!ctx->state->resolving)
     {
       info ("[event:cros:%s] Unexpected ResolveProxy response seen",
-- 
2.20.1

